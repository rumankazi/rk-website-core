name: Deploy Documentation

on:
  push:
    branches: [main]
    paths: ['docs/**', '.github/workflows/docs.yml']
  pull_request:
    branches: [main]
    paths: ['docs/**']

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  # Build job
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Not needed if lastUpdated is not enabled

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: 'docs/pnpm-lock.yaml'

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install documentation dependencies
        run: |
          cd docs
          pnpm install --frozen-lockfile

      - name: Build documentation with VitePress
        run: |
          cd docs
          pnpm docs:build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist/docs

  # Deployment job (only on main branch)
  deploy-docs:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build-docs
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Preview job (only on PRs)
  preview-docs:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: build-docs
    steps:
      - name: Comment PR with preview info
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸ“š Documentation preview will be available after merge to main branch.
              
              **Changes detected in:**
              - Documentation files in \`docs/\` directory
              
              **Preview locally:**
              \`\`\`bash
              cd docs
              pnpm install
              pnpm docs:dev
              \`\`\`
              
              The documentation will be automatically deployed to GitHub Pages once this PR is merged.`
            })
