name: Deploy Documentation

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths: ['docs/**', '.github/workflows/docs.yml']
  pull_request:
    branches: [main]
    paths: ['docs/**']

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: pages
  cancel-in-progress: false

env:
  NODE_VERSION: '20'
  PNPM_VERSION: 'latest'

jobs:
  # Build job
  build-docs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Not needed if lastUpdated is not enabled

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
          cache-dependency-path: 'docs/pnpm-lock.yaml'

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install documentation dependencies
        run: |
          cd docs
          pnpm install --frozen-lockfile

      - name: Build documentation with VitePress
        run: |
          cd docs
          # Clear any parent workspace context and config files
          unset PNPM_HOME
          # Ensure no PostCSS config files are found from parent directories
          export NODE_PATH=""
          # Build with explicit configuration isolation
          NODE_ENV=production pnpm docs:build
        env:
          # Prevent VitePress from searching parent directories for config files
          VITE_CWD: ${{ github.workspace }}/docs
          # Disable telemetry and other external dependencies
          DISABLE_OPENCOLLECTIVE: true
          ADBLOCK: true

      - name: Verify build output
        run: |
          cd docs
          echo "Build output contents:"
          ls -la .vitepress/dist/
          echo "Index file exists:"
          test -f .vitepress/dist/index.html && echo "✅ index.html found" || echo "❌ index.html missing"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: docs/.vitepress/dist

  # Deployment job (only on main branch)
  deploy-docs:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build-docs
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Preview job (only on PRs)
  preview-docs:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    needs: build-docs
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Comment PR with preview info
        run: |
          gh pr comment ${{ github.event.number }} --body "📚 **Documentation Build Successful**

          **Changes detected in documentation files** 📝

          Your documentation changes have been successfully built and will be deployed to GitHub Pages once this PR is merged to the main branch.

          ## 🚀 Preview Locally
          To preview the documentation locally, run:
          \`\`\`bash
          cd docs
          pnpm install
          pnpm docs:dev
          # Open http://localhost:5173
          \`\`\`

          ## 📖 Live Documentation
          After merge, the updated documentation will be available at:
          **https://rumankazi.github.io/rk-website-core/**

          ## 🔍 Build Details
          - **Build Status**: ✅ Successful
          - **VitePress Version**: $(cd docs && pnpm list vitepress --depth=0 2>/dev/null | grep vitepress || echo 'Latest')
          - **Pages Generated**: $(find docs/.vitepress/dist -name '*.html' | wc -l 2>/dev/null || echo 'Multiple') HTML files
          - **Assets**: $(find docs/.vitepress/dist/assets -type f 2>/dev/null | wc -l || echo 'Multiple') static assets

          ---
          *🤖 Automated comment from docs build workflow*"
        env:
          GH_TOKEN: ${{ github.token }}
